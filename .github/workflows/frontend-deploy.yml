name: "* Deploy frontend"

on:
  workflow_call:
    inputs:
      dry-run:
        required: false
        default: true
        type: boolean
      artifact:
        required: true
        type: string
      environment:
        required: true
        type: string
    secrets:
      SSH_PRIVATE_KEY:
        required: true
      SSH_HOST:
        required: true
      SSH_USER:
        required: true

jobs:
  deploy:
    runs-on: ubuntu-latest
    steps:
      - name: Install SSH Key
        uses: shimataro/ssh-key-action@v2.5.1
        with:
          key: ${{ secrets.SSH_PRIVATE_KEY }}
          known_hosts: "just-a-placeholder-so-we-dont-get-errors"
      - name: Adding Known Hosts
        run: ssh-keyscan -H ${{ secrets.SSH_HOST }} >> ~/.ssh/known_hosts
      - name: Download artifacts
        id: download
        uses: actions/download-artifact@v3
        with:
          name: ${{ inputs.artifact }}
      - name: Deploy to production with rsync (dry-run)
        if: inputs.dry-run && inputs.environment == 'production'
        run: rsync -avhzn ${{steps.download.outputs.download-path}} ${{ secrets.SSH_USER }}@${{ secrets.SSH_HOST }}:/var/www/mikane/ --delete

      - name: Deploy to production with rsync
        if: ${{!inputs.dry-run && inputs.environment == 'production'}}
        run: rsync -avhz ${{steps.download.outputs.download-path}} ${{ secrets.SSH_USER }}@${{ secrets.SSH_HOST }}:/var/www/mikane/ --delete

      - name: Deploy to staging with rsync (dry-run)
        if: inputs.dry-run && inputs.environment == 'staging'
        run: rsync -avhzn ${{steps.download.outputs.download-path}} ${{ secrets.SSH_USER }}@${{ secrets.SSH_HOST }}:/var/www/mikane-staging/ --delete

      - name: Deploy to staging with rsync
        if: ${{!inputs.dry-run && inputs.environment == 'staging'}}
        run: rsync -avhz ${{steps.download.outputs.download-path}} ${{ secrets.SSH_USER }}@${{ secrets.SSH_HOST }}:/var/www/mikane-staging/ --delete

      - name: Deploy to test with rsync (dry-run)
        if: inputs.dry-run && inputs.environment == 'test'
        run: rsync -avhzn ${{steps.download.outputs.download-path}} ${{ secrets.SSH_USER }}@${{ secrets.SSH_HOST }}:/var/www/mikane-test/ --delete

      - name: Deploy to test with rsync
        if: ${{!inputs.dry-run && inputs.environment == 'test'}}
        run: rsync -avhz ${{steps.download.outputs.download-path}} ${{ secrets.SSH_USER }}@${{ secrets.SSH_HOST }}:/var/www/mikane-test/ --delete
