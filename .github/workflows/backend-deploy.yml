name: "* Deploy backend"

on:
    workflow_call:
        inputs:
            dry-run:
                required: false
                default: true
                type: boolean
            artifact:
                required: true
                type: string
            environment:
                required: true
                type: string
        secrets:
            SSH_PRIVATE_KEY:
                required: true
            SSH_HOST:
                required: true
            SSH_USER:
                required: true

jobs:
    deploy:
        runs-on: ubuntu-latest
        steps:
            - name: Set up SSH
              run: |
                mkdir -p ~/.ssh/
                echo "$SSH_PRIVATE_KEY" > ./deploy.key
                sudo chmod 600 ./deploy.key
                echo "$SSH_HOST" > ~/.ssh/known_hosts
              shell: bash
              env:
                SSH_PRIVATE_KEY: ${{secrets.SSH_PRIVATE_KEY}}
                SSH_HOST: ${{secrets.SSH_HOST}}

            - name: Download artifacts
              id: download
              uses: actions/download-artifact@v3
              with:
                  name: ${{ inputs.artifact }}

            - name: Deploy to production with rsync (dry-run)
              if: inputs.dry-run && inputs.environment == 'production'
              run: rsync -avhzn ${{steps.download.outputs.download-path}} ${{ secrets.SSH_USER }}@${{ secrets.SSH_HOST }}:/opt/mikane/

            - name: Deploy to production with rsync
              if: ${{!inputs.dry-run && inputs.environment == 'production'}}
              run: rsync -avhz ${{steps.download.outputs.download-path}} ${{ secrets.SSH_USER }}@${{ secrets.SSH_HOST }}:/opt/mikane/

            - name: Deploy to staging with rsync (dry-run)
              if: inputs.dry-run && inputs.environment == 'staging'
              run: rsync -avhzn ${{steps.download.outputs.download-path}} ${{ secrets.SSH_USER }}@${{ secrets.SSH_HOST }}:/opt/mikane-staging/

            - name: Deploy to staging with rsync
              if: ${{!inputs.dry-run && inputs.environment == 'staging'}}
              run: rsync -avhz ${{steps.download.outputs.download-path}} ${{ secrets.SSH_USER }}@${{ secrets.SSH_HOST }}:/opt/mikane-staging/

            # - name: Deploy to test with rsync (dry-run)
            #   if: inputs.dry-run && inputs.environment == 'test'
            #   run: rsync -avhzn ${{steps.download.outputs.download-path}} ${{ secrets.SSH_USER }}@${{ secrets.SSH_HOST }}:/opt/mikane-test/

            # - name: Deploy to test with rsync
            #   if: ${{!inputs.dry-run && inputs.environment == 'test'}}
            #   run: rsync -avhz ${{steps.download.outputs.download-path}} ${{ secrets.SSH_USER }}@${{ secrets.SSH_HOST }}:/opt/mikane-test/

            - name: Install PM2
              if: ${{!inputs.dry-run && inputs.environment == 'test'}}
              run: npm install pm2

            - name: Deploy with PM2
              if: ${{!inputs.dry-run && inputs.environment == 'test'}}
              run: pm2 deploy ecosystem.config.js test
              env:
                SSH_USER: ${{ secrets.SSH_USER }}
                SSH_HOST: ${{ secrets.SSH_HOST }}
