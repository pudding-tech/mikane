{
  "openapi": "3.0.3",
  "info": {
    "version": "2.0.0",
    "title": "PuddingDebt API",
    "description": "Documentation for all endpoints in the PuddingDebt API"
  },
  "servers": [
    {
      "url": "http://localhost:3002/api",
      "description": "Local test server"
    }
  ],
  "paths": {
    "/login": {
      "get": {
        "tags": [
          "Authentication"
        ],
        "summary": "Check login status",
        "description": "Check whether user is logged in or not",
        "operationId": "getLogin",
        "responses": {
          "200": {
            "description": "Successfully authenticated",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "properties": {
                    "authenticated": {
                      "type": "boolean",
                      "example": "true"
                    },
                    "id": {
                      "type": "integer",
                      "example": 1
                    },
                    "username": {
                      "type": "string",
                      "example": "testuser"
                    },
                    "uuid": {
                      "type": "string",
                      "example": "e1c594bc-93b7-4a33-9181-5de0b094ed9b"
                    }
                  }
                }
              }
            }
          },
          "401": {
            "description": "Unauthorized",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/NoAuthResponse"
                }
              }
            }
          }
        }
      },
      "post": {
        "tags": [
          "Authentication"
        ],
        "summary": "Log in user",
        "description": "Log in user with username/email and password",
        "operationId": "postLogin",
        "requestBody": {
          "description": "User credentials",
          "content": {
            "application/json": {
              "schema": {
                "type": "object",
                "properties": {
                  "usernameEmail": {
                    "type": "string",
                    "example": "testuser"
                  },
                  "password": {
                    "type": "string",
                    "example": "secret"
                  }
                }
              }
            }
          }
        },
        "responses": {
          "200": {
            "description": "Successfully authenticated. The session ID is returned in a cookie named `puddingdebt.sid`. You need to include this cookie in subsequent requests.",
            "headers": {
              "Set-Cookie": {
                "schema": {
                  "type": "string",
                  "example": "puddingdebt.sid=abcdef12345; Path=/; HttpOnly;"
                }
              }
            },
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/UserLoginResponse"
                }
              }
            }
          },
          "400": {
            "description": "Bad request",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ErrorResponse"
                }
              }
            }
          },
          "401": {
            "description": "Unauthorized",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/NoAuthResponse"
                }
              }
            }
          }
        }
      }
    },
    "/logout": {
      "post": {
        "tags": [
          "Authentication"
        ],
        "summary": "Log out user",
        "description": "Log out user",
        "operationId": "postLogout",
        "responses": {
          "200": {
            "description": "Signed out successfully",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "properties": {
                    "msg": {
                      "type": "string",
                      "example": "Signed out successfully"
                    }
                  }
                }
              }
            }
          },
          "401": {
            "description": "No user authenticated",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/NoAuthResponse"
                }
              }
            }
          }
        }
      }
    },
    "/requestpasswordreset": {
      "post": {
        "tags": [
          "Authentication"
        ],
        "summary": "Request a password reset",
        "description": "Request a password reset for a user",
        "operationId": "postRequestPasswordReset",
        "requestBody": {
          "description": "Email",
          "content": {
            "application/json": {
              "schema": {
                "type": "string",
                "example": "test@test.com"
              }
            }
          }
        },
        "responses": {
          "200": {
            "description": "Request received",
            "content": {}
          },
          "400": {
            "description": "Bad request",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ErrorResponse"
                }
              }
            }
          }
        }
      }
    },
    "/verifypasswordreset/{key}": {
      "get": {
        "tags": [
          "Authentication"
        ],
        "summary": "Verify a password reset",
        "description": "Verify that a password reset key exists and is valid",
        "operationId": "postVerifyPasswordReset",
        "parameters": [
          {
            "name": "key",
            "in": "path",
            "description": "Password reset key",
            "required": true,
            "schema": {
              "type": "string"
            },
            "example": "2933edede2e915146d4b6082a8398afbb42c946decb09018123af99065807a842b01e6620e1084f004b142a6112166c5"
          }
        ],
        "responses": {
          "200": {
            "description": "Key exists",
            "content": {
              "application/json": {
                "schema": {
                  "type": "boolean",
                  "example": true
                }
              }
            }
          },
          "404": {
            "description": "Key not found",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ErrorResponse"
                }
              }
            }
          }
        }
      }
    },
    "/resetpassword": {
      "post": {
        "tags": [
          "Authentication"
        ],
        "summary": "Reset password",
        "description": "Reset a user's password",
        "operationId": "postResetPassword",
        "requestBody": {
          "description": "Password reset key, and new password",
          "content": {
            "application/json": {
              "schema": {
                "type": "object",
                "properties": {
                  "key": {
                    "type": "string",
                    "example": "2933edede2e915146d4b6082a8398afbb42c946decb09018123af99065807a842b01e6620e1084f004b142a6112166c5"
                  },
                  "password": {
                    "type": "string",
                    "example": "test"
                  }
                }
              }
            }
          }
        },
        "responses": {
          "200": {
            "description": "Password has been reset, and key invalidated",
            "content": {}
          },
          "400": {
            "description": "Bad request",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ErrorResponse"
                }
              }
            }
          },
          "404": {
            "description": "Key not found",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ErrorResponse"
                }
              }
            }
          }
        }
      }
    },
    "/generatekey": {
      "post": {
        "tags": [
          "Authentication"
        ],
        "summary": "Generate API key",
        "description": "Generate a new API key and save it in the database. This endpoint requires a master key in the Authorization header.",
        "operationId": "postKey",
        "security": [
          { "apiKeyAuth": [] }
        ],
        "parameters": [
          {
            "name": "name",
            "in": "query",
            "description": "Name of key",
            "required": true,
            "schema": {
              "type": "string"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "API key created",
            "content": {
              "application/json": {
                "schema": {
                  "type": "string",
                  "example": "2kj5bvh39nbm2h6lkj8"
                }
              }
            }
          },
          "400": {
            "description": "Bad request",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ErrorResponse"
                }
              }
            }
          },
          "401": {
            "description": "Unauthorized",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/NoAuthResponse"
                }
              }
            }
          },
          "409": {
            "description": "Conflict",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ErrorResponse"
                }
              }
            }
          }
        }
      }
    },
    "/users": {
      "get": {
        "tags": [
          "Users"
        ],
        "summary": "Get users",
        "description": "Get a list of all users, optionally in an event",
        "operationId": "getUsers",
        "security": [
          { "cookieAuth": [] }
        ],
        "parameters": [
          {
            "name": "eventId",
            "in": "query",
            "description": "Get only users connected to this event",
            "required": false,
            "schema": {
              "type": "integer"
            }
          },
          {
            "name": "exclude",
            "in": "query",
            "description": "Set this to 'self' to remove logged in user from response",
            "required": false,
            "schema": {
              "type": "string"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "Success - 'event' property is only present when eventId is given as input parameter",
            "content": {
              "application/json": {
                "schema": {
                  "type": "array",
                  "items": {
                    "$ref": "#/components/schemas/UserWithEvent"
                  }
                }
              }
            }
          },
          "401": {
            "description": "Unauthorized",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/NoAuthResponse"
                }
              }
            }
          }
        }
      },
      "post": {
        "tags": [
          "Users"
        ],
        "summary": "Create new user",
        "description": "Register a new user",
        "operationId": "postUsers",
        "requestBody": {
          "description": "User details",
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/RegisterUserObject"
              }
            }
          }
        },
        "responses": {
          "200": {
            "description": "Success",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/UserDetailed"
                }
              }
            }
          },
          "400": {
            "description": "Bad request",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ErrorResponse"
                }
              }
            }
          },
          "401": {
            "description": "Unauthorized",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/NoAuthResponse"
                }
              }
            }
          },
          "409": {
            "description": "Conflict",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ErrorResponse"
                }
              }
            }
          }
        }
      }
    },
    "/users/{id}": {
      "get": {
        "tags": [
          "Users"
        ],
        "summary": "Get user",
        "description": "Get information about a specific user",
        "operationId": "getUser",
        "security": [
          { "cookieAuth": [] }
        ],
        "parameters": [
          {
            "name": "id",
            "in": "path",
            "description": "User ID",
            "required": true,
            "schema": {
              "type": "integer"
            },
            "example": 1
          }
        ],
        "responses": {
          "200": {
            "description": "Success",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/UserDetailed"
                }
              }
            }
          },
          "400": {
            "description": "Bad request",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ErrorResponse"
                }
              }
            }
          },
          "401": {
            "description": "Unauthorized",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/NoAuthResponse"
                }
              }
            }
          },
          "404": {
            "description": "User not found",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ErrorResponse"
                }
              }
            }
          }
        }
      },
      "put": {
        "tags": [
          "Users"
        ],
        "summary": "Edit user",
        "description": "Edit a user",
        "operationId": "putUser",
        "security": [
          { "cookieAuth": [] }
        ],
        "parameters": [
          {
            "name": "id",
            "in": "path",
            "description": "User ID",
            "required": true,
            "schema": {
              "type": "integer"
            },
            "example": 1
          }
        ],
        "requestBody": {
          "description": "User details",
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/EditUserObject"
              }
            }
          }
        },
        "responses": {
          "200": {
            "description": "Success",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/UserDetailed"
                }
              }
            }
          },
          "400": {
            "description": "Bad request",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ErrorResponse"
                }
              }
            }
          },
          "401": {
            "description": "Unauthorized",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/NoAuthResponse"
                }
              }
            }
          },
          "404": {
            "description": "User not found",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ErrorResponse"
                }
              }
            }
          },
          "409": {
            "description": "Conflict",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ErrorResponse"
                }
              }
            }
          }
        }
      },
      "delete": {
        "tags": [
          "Users"
        ],
        "summary": "Delete user",
        "description": "Delete a user",
        "operationId": "deleteUser",
        "security": [
          { "cookieAuth": [] }
        ],
        "parameters": [
          {
            "name": "id",
            "in": "path",
            "description": "User ID",
            "required": true,
            "schema": {
              "type": "integer"
            },
            "example": 1
          }
        ],
        "responses": {
          "200": {
            "description": "Success",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/DeleteSuccess"
                }
              }
            }
          },
          "400": {
            "description": "Bad request",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ErrorResponse"
                }
              }
            }
          },
          "401": {
            "description": "Unauthorized",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/NoAuthResponse"
                }
              }
            }
          },
          "404": {
            "description": "User not found",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ErrorResponse"
                }
              }
            }
          }
        }
      }
    },
    "/users/{id}/expenses/{eventId}": {
      "get": {
        "tags": [
          "Users"
        ],
        "summary": "Get a user's expenses",
        "description": "Get a list of a user's expenses",
        "operationId": "getUserExpenses",
        "security": [
          { "cookieAuth": [] }
        ],
        "parameters": [
          {
            "name": "id",
            "in": "path",
            "description": "User ID",
            "required": true,
            "schema": {
              "type": "integer"
            },
            "example": 1
          },
          {
            "name": "eventId",
            "in": "path",
            "description": "Event ID",
            "required": true,
            "schema": {
              "type": "integer"
            },
            "example": 1
          }
        ],
        "responses": {
          "200": {
            "description": "Success",
            "content": {
              "application/json": {
                "schema": {
                  "type": "array",
                  "items": {
                    "$ref": "#/components/schemas/Expense"
                  }
                }
              }
            }
          },
          "400": {
            "description": "Bad request",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ErrorResponse"
                }
              }
            }
          },
          "401": {
            "description": "Unauthorized",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/NoAuthResponse"
                }
              }
            }
          },
          "404": {
            "description": "User/event not found",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ErrorResponse"
                }
              }
            }
          }
        }
      }
    },
    "/users/changepassword": {
      "post": {
        "tags": [
          "Users"
        ],
        "summary": "Change user's password",
        "description": "Change signed in user's password",
        "operationId": "postChangePassword",
        "security": [
          { "cookieAuth": [] }
        ],
        "requestBody": {
          "description": "Current password and new password",
          "content": {
            "application/json": {
              "schema": {
                "type": "object",
                "properties": {
                  "currentPassword": {
                    "type": "string",
                    "example": "test"
                  },
                  "newPassword": {
                    "type": "string",
                    "example": "newtest"
                  }
                }
              }
            }
          }
        },
        "responses": {
          "200": {
            "description": "Password successfully changed",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "properties": {
                    "message": {
                      "type": "string",
                      "example": "Password successfully changed"
                    }
                  }
                }
              }
            }
          },
          "400": {
            "description": "Bad request",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ErrorResponse"
                }
              }
            }
          }
        }
      }
    },
    "/events": {
      "get": {
        "tags": [
          "Events"
        ],
        "summary": "Get events",
        "description": "Get all events",
        "operationId": "getEvents",
        "security": [
          { "cookieAuth": [] }
        ],
        "responses": {
          "200": {
            "description": "Success - 'user' property is only present when a logged in user makes the request",
            "content": {
              "application/json": {
                "schema": {
                  "type": "array",
                  "items": {
                    "$ref": "#/components/schemas/EventWithUser"
                  }
                }
              }
            }
          },
          "401": {
            "description": "Unauthorized",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/NoAuthResponse"
                }
              }
            }
          }
        }
      },
      "post": {
        "tags": [
          "Events"
        ],
        "summary": "Create event",
        "description": "Create a new event",
        "operationId": "postEvent",
        "security": [
          { "cookieAuth": [] }
        ],
        "requestBody": {
          "description": "Event details",
          "content": {
            "application/json": {
              "schema": {
                "type": "object",
                "properties": {
                  "name": {
                    "type": "string",
                    "example": "Example event"
                  },
                  "description": {
                    "type": "string",
                    "example": "Example description"
                  },
                  "private": {
                    "type": "boolean",
                    "example": false
                  }
                }
              }
            }
          }
        },
        "responses": {
          "200": {
            "description": "Success",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/Event"
                }
              }
            }
          },
          "400": {
            "description": "Bad request",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ErrorResponse"
                }
              }
            }
          },
          "401": {
            "description": "Unauthorized",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/NoAuthResponse"
                }
              }
            }
          },
          "404": {
            "description": "User not found",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ErrorResponse"
                }
              }
            }
          },
          "409": {
            "description": "Conflict",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ErrorResponse"
                }
              }
            }
          }
        }
      }
    },
    "/events/{id}": {
      "get": {
        "tags": [
          "Events"
        ],
        "summary": "Get event",
        "description": "Get an event",
        "operationId": "getEvent",
        "security": [
          { "cookieAuth": [] }
        ],
        "parameters": [
          {
            "name": "id",
            "in": "path",
            "description": "Event ID",
            "required": true,
            "schema": {
              "type": "integer"
            },
            "example": 1
          }
        ],
        "responses": {
          "200": {
            "description": "Success - 'user' property is only present when a logged in user makes the request",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/EventWithUser"
                }
              }
            }
          },
          "400": {
            "description": "Bad request",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ErrorResponse"
                }
              }
            }
          },
          "401": {
            "description": "Unauthorized",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/NoAuthResponse"
                }
              }
            }
          },
          "404": {
            "description": "Event not found",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ErrorResponse"
                }
              }
            }
          }
        }
      },
      "put": {
        "tags": [
          "Events"
        ],
        "summary": "Edit event",
        "description": "Edit an event. Only allowed for the event admin.",
        "operationId": "putEvent",
        "security": [
          { "cookieAuth": [] }
        ],
        "parameters": [
          {
            "name": "id",
            "in": "path",
            "description": "Event ID",
            "required": true,
            "schema": {
              "type": "integer"
            },
            "example": 1
          }
        ],
        "requestBody": {
          "description": "Event details",
          "content": {
            "application/json": {
              "schema": {
                "type": "object",
                "properties": {
                  "name": {
                    "type": "string",
                    "example": "New event name"
                  },
                  "description": {
                    "type": "string",
                    "example": "New event description"
                  },
                  "private": {
                    "type": "integer",
                    "example": 1
                  }
                }
              }
            }
          }
        },
        "responses": {
          "200": {
            "description": "Success",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/Event"
                }
              }
            }
          },
          "400": {
            "description": "Bad request",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ErrorResponse"
                }
              }
            }
          },
          "401": {
            "description": "Unauthorized",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/NoAuthResponse"
                }
              }
            }
          },
          "403": {
            "description": "Forbidden - only allowed for the event admin",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ErrorResponse"
                }
              }
            }
          },
          "404": {
            "description": "Event not found",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ErrorResponse"
                }
              }
            }
          },
          "409": {
            "description": "Conflict",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ErrorResponse"
                }
              }
            }
          }
        }
      },
      "delete": {
        "tags": [
          "Events"
        ],
        "summary": "Delete event",
        "description": "Delete an event. Only allowed for the event admin.",
        "operationId": "deleteEvent",
        "security": [
          { "cookieAuth": [] }
        ],
        "parameters": [
          {
            "name": "id",
            "in": "path",
            "description": "Event ID",
            "required": true,
            "schema": {
              "type": "integer"
            },
            "example": 1
          }
        ],
        "responses": {
          "200": {
            "description": "Success",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/DeleteSuccess"
                }
              }
            }
          },
          "400": {
            "description": "Bad request",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ErrorResponse"
                }
              }
            }
          },
          "401": {
            "description": "Unauthorized",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/NoAuthResponse"
                }
              }
            }
          },
          "403": {
            "description": "Forbidden - only allowed for the event admin",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ErrorResponse"
                }
              }
            }
          },
          "404": {
            "description": "Event not found",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ErrorResponse"
                }
              }
            }
          }
        }
      }
    },
    "/events/{id}/balances": {
      "get": {
        "tags": [
          "Events"
        ],
        "summary": "Get an event's balance information",
        "description": "Get an event's balance information for all users",
        "operationId": "getEventBalances",
        "security": [
          { "cookieAuth": [] }
        ],
        "parameters": [
          {
            "name": "id",
            "in": "path",
            "description": "Event ID",
            "required": true,
            "schema": {
              "type": "integer"
            },
            "example": 1
          }
        ],
        "responses": {
          "200": {
            "description": "Success",
            "content": {
              "application/json": {
                "schema": {
                  "type": "array",
                  "items": {
                    "$ref": "#/components/schemas/UserBalance"
                  }
                }
              }
            }
          },
          "400": {
            "description": "Bad request",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ErrorResponse"
                }
              }
            }
          },
          "401": {
            "description": "Unauthorized",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/NoAuthResponse"
                }
              }
            }
          },
          "404": {
            "description": "Event not found",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ErrorResponse"
                }
              }
            }
          }
        }
      }
    },
    "/events/{id}/payments": {
      "get": {
        "tags": [
          "Events"
        ],
        "summary": "Get an event's payments information",
        "description": "Get an event's payments information for all users",
        "operationId": "getEventPayments",
        "security": [
          { "cookieAuth": [] },
          { "apiKeyAuth": [] }
        ],
        "parameters": [
          {
            "name": "id",
            "in": "path",
            "description": "Event ID",
            "required": true,
            "schema": {
              "type": "integer"
            },
            "example": 1
          }
        ],
        "responses": {
          "200": {
            "description": "Success",
            "content": {
              "application/json": {
                "schema": {
                  "type": "array",
                  "items": {
                    "$ref": "#/components/schemas/Payment"
                  }
                }
              }
            }
          },
          "400": {
            "description": "Bad request",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ErrorResponse"
                }
              }
            }
          },
          "401": {
            "description": "Unauthorized",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/NoAuthResponse"
                }
              }
            }
          },
          "404": {
            "description": "Event not found",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ErrorResponse"
                }
              }
            }
          }
        }
      }
    },
    "/events/{id}/user/{userId}": {
      "post": {
        "tags": [
          "Events"
        ],
        "summary": "Add user to event",
        "description": "Add a user to an event",
        "operationId": "postUserToEvent",
        "security": [
          { "cookieAuth": [] }
        ],
        "parameters": [
          {
            "name": "id",
            "in": "path",
            "description": "Event ID",
            "required": true,
            "schema": {
              "type": "integer"
            },
            "example": 1
          },
          {
            "name": "userId",
            "in": "path",
            "description": "User ID",
            "required": true,
            "schema": {
              "type": "integer"
            },
            "example": 1
          }
        ],
        "responses": {
          "200": {
            "description": "Success",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/Event"
                }
              }
            }
          },
          "400": {
            "description": "Bad request",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ErrorResponse"
                }
              }
            }
          },
          "401": {
            "description": "Unauthorized",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/NoAuthResponse"
                }
              }
            }
          },
          "404": {
            "description": "Event/user not found",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ErrorResponse"
                }
              }
            }
          },
          "409": {
            "description": "Conflict",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ErrorResponse"
                }
              }
            }
          }
        }
      },
      "delete": {
        "tags": [
          "Events"
        ],
        "summary": "Remove user from event",
        "description": "Remove a user from an event",
        "operationId": "deleteUserFromEvent",
        "security": [
          { "cookieAuth": [] }
        ],
        "parameters": [
          {
            "name": "id",
            "in": "path",
            "description": "Event ID",
            "required": true,
            "schema": {
              "type": "integer"
            },
            "example": 1
          },
          {
            "name": "userId",
            "in": "path",
            "description": "User ID",
            "required": true,
            "schema": {
              "type": "integer"
            },
            "example": 1
          }
        ],
        "responses": {
          "200": {
            "description": "Success",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/Event"
                }
              }
            }
          },
          "400": {
            "description": "Bad request",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ErrorResponse"
                }
              }
            }
          },
          "401": {
            "description": "Unauthorized",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/NoAuthResponse"
                }
              }
            }
          },
          "404": {
            "description": "Event/user not found",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ErrorResponse"
                }
              }
            }
          }
        }
      }
    },
    "/event-by-name": {
      "get": {
        "tags": [
          "Events"
        ],
        "summary": "Get event by name",
        "description": "Get an event by the event's name",
        "operationId": "getEventByName",
        "security": [
          { "cookieAuth": [] },
          { "apiKeyAuth": [] }
        ],
        "requestBody": {
          "description": "Event name",
          "content": {
            "application/json": {
              "schema": {
                "type": "object",
                "properties": {
                  "name": {
                    "type": "string",
                    "example": "Example Event"
                  }
                }
              }
            }
          }
        },
        "responses": {
          "200": {
            "description": "Success - 'user' property is only present when a logged in user makes the request",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/EventWithUser"
                }
              }
            }
          },
          "401": {
            "description": "Unauthorized",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/NoAuthResponse"
                }
              }
            }
          },
          "404": {
            "description": "Event not found",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ErrorResponse"
                }
              }
            }
          }
        }
      }
    },
    "/categories": {
      "get": {
        "tags": [
          "Categories"
        ],
        "summary": "Get categories",
        "description": "Get all categories in an event",
        "operationId": "getCategories",
        "security": [
          { "cookieAuth": [] }
        ],
        "parameters": [
          {
            "name": "eventId",
            "in": "query",
            "description": "Event ID",
            "required": true,
            "schema": {
              "type": "integer"
            },
            "example": 1
          }
        ],
        "responses": {
          "200": {
            "description": "Success",
            "content": {
              "application/json": {
                "schema": {
                  "type": "array",
                  "items": {
                    "$ref": "#/components/schemas/Category"
                  }
                }
              }
            }
          },
          "401": {
            "description": "Unauthorized",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/NoAuthResponse"
                }
              }
            }
          },
          "400": {
            "description": "Bad request",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ErrorResponse"
                }
              }
            }
          },
          "404": {
            "description": "Event not found",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ErrorResponse"
                }
              }
            }
          }
        }
      },
      "post": {
        "tags": [
          "Categories"
        ],
        "summary": "Create category",
        "description": "Create a new category",
        "operationId": "postCategory",
        "security": [
          { "cookieAuth": [] }
        ],
        "requestBody": {
          "description": "Category details",
          "content": {
            "application/json": {
              "schema": {
                "type": "object",
                "properties": {
                  "name": {
                    "type": "string",
                    "example": "Example category"
                  },
                  "eventId": {
                    "type": "integer",
                    "example": 1
                  },
                  "weighted": {
                    "type": "boolean",
                    "example": true
                  }
                }
              }
            }
          }
        },
        "responses": {
          "200": {
            "description": "Success",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/Category"
                }
              }
            }
          },
          "400": {
            "description": "Bad request",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ErrorResponse"
                }
              }
            }
          },
          "401": {
            "description": "Unauthorized",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/NoAuthResponse"
                }
              }
            }
          },
          "404": {
            "description": "Category not found",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ErrorResponse"
                }
              }
            }
          }
        }
      }
    },
    "/categories/{id}": {
      "get": {
        "tags": [
          "Categories"
        ],
        "summary": "Get category",
        "description": "Get a specific category",
        "operationId": "getCategory",
        "security": [
          { "cookieAuth": [] }
        ],
        "parameters": [
          {
            "name": "id",
            "in": "path",
            "description": "Category ID",
            "required": true,
            "schema": {
              "type": "integer"
            },
            "example": 1
          }
        ],
        "responses": {
          "200": {
            "description": "Success",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/Category"
                }
              }
            }
          },
          "400": {
            "description": "Bad request",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ErrorResponse"
                }
              }
            }
          },
          "401": {
            "description": "Unauthorized",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/NoAuthResponse"
                }
              }
            }
          },
          "404": {
            "description": "Category not found",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ErrorResponse"
                }
              }
            }
          }
        }
      },
      "put": {
        "tags": [
          "Categories"
        ],
        "summary": "Edit category",
        "description": "Edit a category (rename)",
        "operationId": "putCategory",
        "security": [
          { "cookieAuth": [] }
        ],
        "parameters": [
          {
            "name": "id",
            "in": "path",
            "description": "Category ID",
            "required": true,
            "schema": {
              "type": "integer"
            },
            "example": 1
          }
        ],
        "requestBody": {
          "description": "Category details",
          "content": {
            "application/json": {
              "schema": {
                "type": "object",
                "properties": {
                  "name": {
                    "type": "string",
                    "example": "New category name"
                  }
                }
              }
            }
          }
        },
        "responses": {
          "200": {
            "description": "Success",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/Category"
                }
              }
            }
          },
          "400": {
            "description": "Bad request",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ErrorResponse"
                }
              }
            }
          },
          "401": {
            "description": "Unauthorized",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/NoAuthResponse"
                }
              }
            }
          },
          "404": {
            "description": "Category not found",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ErrorResponse"
                }
              }
            }
          }
        }
      },
      "delete": {
        "tags": [
          "Categories"
        ],
        "summary": "Delete category",
        "description": "Delete a category",
        "operationId": "deleteCategory",
        "security": [
          { "cookieAuth": [] }
        ],
        "parameters": [
          {
            "name": "id",
            "in": "path",
            "description": "Category ID",
            "required": true,
            "schema": {
              "type": "integer"
            },
            "example": 1
          }
        ],
        "responses": {
          "200": {
            "description": "Success",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/DeleteSuccess"
                }
              }
            }
          },
          "400": {
            "description": "Bad request",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ErrorResponse"
                }
              }
            }
          },
          "401": {
            "description": "Unauthorized",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/NoAuthResponse"
                }
              }
            }
          },
          "404": {
            "description": "Category not found",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ErrorResponse"
                }
              }
            }
          }
        }
      }
    },
    "/categories/{id}/weighted": {
      "put": {
        "tags": [
          "Categories"
        ],
        "summary": "Edit category weighted status",
        "description": "Change weight status for a category (weighted or non-weighted)",
        "operationId": "putCategoryWeighted",
        "security": [
          { "cookieAuth": [] }
        ],
        "parameters": [
          {
            "name": "id",
            "in": "path",
            "description": "Category ID",
            "required": true,
            "schema": {
              "type": "integer"
            },
            "example": 1
          }
        ],
        "requestBody": {
          "description": "Weighted status",
          "content": {
            "application/json": {
              "schema": {
                "type": "object",
                "properties": {
                  "weighted": {
                    "type": "boolean",
                    "example": true
                  }
                }
              }
            }
          }
        },
        "responses": {
          "200": {
            "description": "Success",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/Category"
                }
              }
            }
          },
          "400": {
            "description": "Bad request",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ErrorResponse"
                }
              }
            }
          },
          "401": {
            "description": "Unauthorized",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/NoAuthResponse"
                }
              }
            }
          },
          "404": {
            "description": "Category not found",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ErrorResponse"
                }
              }
            }
          }
        }
      }
    },
    "/categories/{id}/user/{userId}": {
      "post": {
        "tags": [
          "Categories"
        ],
        "summary": "Add user to category",
        "description": "Add a user to a category",
        "operationId": "postUserToCategory",
        "security": [
          { "cookieAuth": [] }
        ],
        "parameters": [
          {
            "name": "id",
            "in": "path",
            "description": "Category ID",
            "required": true,
            "schema": {
              "type": "integer"
            },
            "example": 1
          },
          {
            "name": "userId",
            "in": "path",
            "description": "User ID",
            "required": true,
            "schema": {
              "type": "integer"
            },
            "example": 1
          }
        ],
        "requestBody": {
          "description": "Weight",
          "content": {
            "application/json": {
              "schema": {
                "type": "object",
                "properties": {
                  "weight": {
                    "type": "number",
                    "example": 3
                  }
                }
              }
            }
          }
        },
        "responses": {
          "200": {
            "description": "Success",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/Category"
                }
              }
            }
          },
          "400": {
            "description": "Bad request",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ErrorResponse"
                }
              }
            }
          },
          "401": {
            "description": "Unauthorized",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/NoAuthResponse"
                }
              }
            }
          },
          "404": {
            "description": "Category/user not found",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ErrorResponse"
                }
              }
            }
          },
          "409": {
            "description": "Conflict",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ErrorResponse"
                }
              }
            }
          }
        }
      },
      "put": {
        "tags": [
          "Categories"
        ],
        "summary": "Edit user in category",
        "description": "Edit a user's weight for a category",
        "operationId": "PutUserCategoryWeight",
        "security": [
          { "cookieAuth": [] }
        ],
        "parameters": [
          {
            "name": "id",
            "in": "path",
            "description": "Category ID",
            "required": true,
            "schema": {
              "type": "integer"
            },
            "example": 1
          },
          {
            "name": "userId",
            "in": "path",
            "description": "User ID",
            "required": true,
            "schema": {
              "type": "integer"
            },
            "example": 1
          }
        ],
        "requestBody": {
          "description": "Weight",
          "required": true,
          "content": {
            "application/json": {
              "schema": {
                "type": "object",
                "properties": {
                  "weight": {
                    "type": "number",
                    "example": 3
                  }
                }
              }
            }
          }
        },
        "responses": {
          "200": {
            "description": "Success",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/Category"
                }
              }
            }
          },
          "400": {
            "description": "Bad request",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ErrorResponse"
                }
              }
            }
          },
          "401": {
            "description": "Unauthorized",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/NoAuthResponse"
                }
              }
            }
          },
          "404": {
            "description": "Category/user not found",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ErrorResponse"
                }
              }
            }
          }
        }
      },
      "delete": {
        "tags": [
          "Categories"
        ],
        "summary": "Remove user from category",
        "description": "Remove a user from a category",
        "operationId": "deleteUserFromCategory",
        "security": [
          { "cookieAuth": [] }
        ],
        "parameters": [
          {
            "name": "id",
            "in": "path",
            "description": "Category ID",
            "required": true,
            "schema": {
              "type": "integer"
            },
            "example": 1
          },
          {
            "name": "userId",
            "in": "path",
            "description": "User ID",
            "required": true,
            "schema": {
              "type": "integer"
            },
            "example": 1
          }
        ],
        "responses": {
          "200": {
            "description": "Success",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/Category"
                }
              }
            }
          },
          "400": {
            "description": "Bad request",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ErrorResponse"
                }
              }
            }
          },
          "401": {
            "description": "Unauthorized",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/NoAuthResponse"
                }
              }
            }
          },
          "404": {
            "description": "Category/user not found",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ErrorResponse"
                }
              }
            }
          }
        }
      }
    },
    "/expenses": {
      "get": {
        "tags": [
          "Expenses"
        ],
        "summary": "Get expenses",
        "description": "Get all expenses for an event",
        "operationId": "getExpenses",
        "security": [
          { "cookieAuth": [] }
        ],
        "parameters": [
          {
            "name": "id",
            "in": "query",
            "description": "Event ID",
            "required": true,
            "schema": {
              "type": "integer"
            },
            "example": 1
          }
        ],
        "responses": {
          "200": {
            "description": "Success",
            "content": {
              "application/json": {
                "schema": {
                  "type": "array",
                  "items": {
                    "$ref": "#/components/schemas/Expense"
                  }
                }
              }
            }
          },
          "400": {
            "description": "Bad request",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ErrorResponse"
                }
              }
            }
          },
          "401": {
            "description": "Unauthorized",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/NoAuthResponse"
                }
              }
            }
          },
          "404": {
            "description": "Event not found",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ErrorResponse"
                }
              }
            }
          }
        }
      },
      "post": {
        "tags": [
          "Expenses"
        ],
        "summary": "Create expense",
        "description": "Create a new expense",
        "operationId": "postExpense",
        "security": [
          { "cookieAuth": [] }
        ],
        "requestBody": {
          "description": "Expense details",
          "required": true,
          "content": {
            "application/json": {
              "schema": {
                "type": "object",
                "properties": {
                  "name": {
                    "type": "string",
                    "example": "Example expense"
                  },
                  "description": {
                    "type": "string",
                    "example": "Example description"
                  },
                  "amount": {
                    "type": "number",
                    "example": 100
                  },
                  "categoryId": {
                    "type": "number",
                    "example": 1
                  },
                  "payerId": {
                    "type": "number",
                    "example": 1
                  }
                }
              }
            }
          }
        },
        "responses": {
          "200": {
            "description": "Success",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/Expense"
                }
              }
            }
          },
          "400": {
            "description": "Bad request",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ErrorResponse"
                }
              }
            }
          },
          "401": {
            "description": "Unauthorized",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/NoAuthResponse"
                }
              }
            }
          },
          "404": {
            "description": "Event not found",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ErrorResponse"
                }
              }
            }
          }
        }
      }
    },
    "/expenses/{id}": {
      "get": {
        "tags": [
          "Expenses"
        ],
        "summary": "Get expense",
        "description": "Get a specific expense",
        "operationId": "getExpense",
        "security": [
          { "cookieAuth": [] }
        ],
        "parameters": [
          {
            "name": "id",
            "in": "path",
            "description": "Expense ID",
            "required": true,
            "schema": {
              "type": "integer"
            },
            "example": 1
          }
        ],
        "responses": {
          "200": {
            "description": "Success",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/Expense"
                }
              }
            }
          },
          "400": {
            "description": "Bad request",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ErrorResponse"
                }
              }
            }
          },
          "401": {
            "description": "Unauthorized",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/NoAuthResponse"
                }
              }
            }
          },
          "404": {
            "description": "Expense not found",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ErrorResponse"
                }
              }
            }
          }
        }
      },
      "delete": {
        "tags": [
          "Expenses"
        ],
        "summary": "Delete expense",
        "description": "Delete an expense. You can only delete your own expenses (unless event admin).",
        "operationId": "deleteExpense",
        "security": [
          { "cookieAuth": [] }
        ],
        "parameters": [
          {
            "name": "id",
            "in": "path",
            "description": "Expense ID",
            "required": true,
            "schema": {
              "type": "integer"
            },
            "example": 1
          }
        ],
        "responses": {
          "200": {
            "description": "Success",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/DeleteSuccess"
                }
              }
            }
          },
          "400": {
            "description": "Bad request",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ErrorResponse"
                }
              }
            }
          },
          "401": {
            "description": "Unauthorized",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/NoAuthResponse"
                }
              }
            }
          },
          "403": {
            "description": "Forbidden - only allowed for your own expenses and for event admin",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ErrorResponse"
                }
              }
            }
          },
          "404": {
            "description": "Expense not found",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ErrorResponse"
                }
              }
            }
          }
        }
      }
    }
  },
  "components": {
    "schemas": {
      "User": {
        "type": "object",
        "properties": {
          "id": {
            "type": "integer",
            "example": 1
          },
          "username": {
            "type": "string",
            "example": "testuser"
          },
          "name": {
            "type": "string",
            "example": "Test"
          },
          "email": {
            "type": "string",
            "example": "test@user.com"
          },
          "created": {
            "type": "date-time",
            "example": "2023-01-20T18:00:00"
          },
          "uuid": {
            "type": "string",
            "example": "e1c594bc-93b7-4a33-9181-5de0b094ed9b"
          }
        }
      },
      "UserWithEvent": {
        "type": "object",
        "properties": {
          "id": {
            "type": "integer",
            "example": 1
          },
          "username": {
            "type": "string",
            "example": "testuser"
          },
          "name": {
            "type": "string",
            "example": "Test"
          },
          "email": {
            "type": "string",
            "example": "test@user.com"
          },
          "created": {
            "type": "date-time",
            "example": "2023-01-20T18:00:00"
          },
          "uuid": {
            "type": "string",
            "example": "e1c594bc-93b7-4a33-9181-5de0b094ed9b"
          },
          "event": {
            "type": "object",
            "properties": {
              "id": {
                "type": "integer",
                "example": 1
              },
              "joinedDate": {
                "type": "date-time",
                "example": "2023-01-20T19:00:00"
              }
            }
          }
        },
        "required": [
          "id",
          "username",
          "name",
          "email",
          "created",
          "uuid"
        ]
      },
      "UserDetailed": {
        "type": "object",
        "properties": {
          "id": {
            "type": "integer",
            "example": 1
          },
          "username": {
            "type": "string",
            "example": "testuser"
          },
          "name": {
            "type": "string",
            "example": "Test"
          },
          "firstName": {
            "type": "string",
            "example": "Test"
          },
          "lastName": {
            "type": "string",
            "example": "McTesty"
          },
          "email": {
            "type": "string",
            "example": "test@user.com"
          },
          "phone": {
            "type": "string",
            "example": "12131415"
          },
          "created": {
            "type": "date-time",
            "example": "2023-01-20T18:00:00"
          },
          "uuid": {
            "type": "string",
            "example": "e1c594bc-93b7-4a33-9181-5de0b094ed9b"
          }
        }
      },
      "UserLoginResponse": {
        "type": "object",
        "properties": {
          "authenticated": {
            "type": "boolean",
            "example": "true"
          },
          "id": {
            "type": "integer",
            "example": 1
          },
          "username": {
            "type": "string",
            "example": "testuser"
          },
          "name": {
            "type": "string",
            "example": "Test"
          },
          "firstName": {
            "type": "string",
            "example": "Test"
          },
          "lastName": {
            "type": "string",
            "example": "McTesty"
          },
          "email": {
            "type": "string",
            "example": "test@user.com"
          },
          "created": {
            "type": "date-time",
            "example": "2023-01-20T18:00:00"
          },
          "uuid": {
            "type": "string",
            "example": "e1c594bc-93b7-4a33-9181-5de0b094ed9b"
          }
        }
      },
      "Event": {
        "type": "object",
        "properties": {
          "id": {
            "type": "integer",
            "example": 1
          },
          "name": {
            "type": "string",
            "example": "Example Event"
          },
          "description": {
            "type": "string",
            "example": "Example description"
          },
          "created": {
            "type": "date-time",
            "example": "2023-01-20T18:00:00"
          },
          "adminIds": {
            "type": "array",
            "items": {
              "type": "number",
              "example": 1
            }
          },
          "private": {
            "type": "boolean",
            "example": false
          },
          "uuid": {
            "type": "string",
            "example": "e1c594bc-93b7-4a33-9181-5de0b094ed9b"
          }
        }
      },
      "EventWithUser": {
        "type": "object",
        "properties": {
          "id": {
            "type": "integer",
            "example": 1
          },
          "name": {
            "type": "string",
            "example": "Example Event"
          },
          "description": {
            "type": "string",
            "example": "Example description"
          },
          "created": {
            "type": "date-time",
            "example": "2023-01-20T18:00:00"
          },
          "adminIds": {
            "type": "array",
            "items": {
              "type": "number",
              "example": 1
            }
          },
          "private": {
            "type": "boolean",
            "example": false
          },
          "uuid": {
            "type": "string",
            "example": "e1c594bc-93b7-4a33-9181-5de0b094ed9b"
          },
          "user": {
            "type": "object",
            "properties": {
              "id": {
                "type": "integer",
                "example": 2
              },
              "inEvent": {
                "type": "boolean",
                "example": true
              },
              "isAdmin": {
                "type": "boolean",
                "example": false
              }
            }
          }
        },
        "required": [
          "id",
          "name",
          "description",
          "created",
          "adminIds",
          "private",
          "uuid"
        ]
      },
      "Expense": {
        "type": "object",
        "properties": {
          "id": {
            "type": "integer",
            "example": 1
          },
          "name": {
            "type": "string",
            "example": "Example expense"
          },
          "description": {
            "type": "string",
            "example": "Example description"
          },
          "amount": {
            "type": "number",
            "example": 100
          },
          "categoryId": {
            "type": "integer",
            "example": 1
          },
          "categoryName": {
            "type": "string",
            "example": "Example category"
          },
          "time": {
            "type": "date-time",
            "example": "2023-01-20T18:00:00"
          },
          "payer": {
            "type": "object",
            "properties": {
              "id": {
                "type": "integer",
                "example": 1
              },
              "username": {
                "type": "string",
                "example": "Example user"
              },
              "name": {
                "type": "string",
                "example": "Test"
              },
              "uuid": {
                "type": "string",
                "example": "e1c594bc-93b7-4a33-9181-5de0b094ed9b"
              }
            }
          }
        }
      },
      "Category": {
        "type": "object",
        "properties": {
          "id": {
            "type": "integer",
            "example": 1
          },
          "name": {
            "type": "string",
            "example": "Test category"
          },
          "weighted": {
            "type": "boolean",
            "example": true
          },
          "users": {
            "type": "array",
            "items": {
              "type": "object",
              "properties": {
                "id": {
                  "type": "integer",
                  "example": 1
                },
                "name": {
                  "type": "string",
                  "example": "Test name"
                },
                "weight": {
                  "type": "number",
                  "example": 3
                }
              }
            }
          }
        }
      },
      "UserBalance": {
        "type": "object",
        "properties": {
          "user": {
            "$ref": "#/components/schemas/User"
          },
          "spending": {
            "type": "number",
            "example": 100
          },
          "expenses": {
            "type": "number",
            "example": 200
          },
          "balance": {
            "type": "number",
            "example": 100
          }
        }
      },
      "Payment": {
        "type": "object",
        "properties": {
          "sender": {
            "$ref": "#/components/schemas/User"
          },
          "receiver": {
            "$ref": "#/components/schemas/User"
          },
          "amount": {
            "type": "number",
            "example": 100
          }
        }
      },
      "RegisterUserObject": {
        "type": "object",
        "properties": {
          "username": {
            "type": "string",
            "example": "testuser"
          },
          "firstName": {
            "type": "string",
            "example": "Test"
          },
          "lastName": {
            "type": "string",
            "example": "User"
          },
          "email": {
            "type": "string",
            "example": "test@user.com"
          },
          "phone": {
            "type": "string",
            "example": "12131415"
          },
          "password": {
            "type": "string",
            "example": "secret"
          }
        }
      },
      "EditUserObject": {
        "type": "object",
        "properties": {
          "username": {
            "type": "string",
            "example": "testuser2"
          },
          "firstName": {
            "type": "string",
            "example": "Albert"
          },
          "lastName": {
            "type": "string",
            "example": "Pooh"
          },
          "email": {
            "type": "string",
            "example": "albert@user.com"
          },
          "phone": {
            "type": "string",
            "example": "12131415"
          }
        }
      },
      "DeleteSuccess": {
        "type": "object",
        "properties": {
          "success": {
            "type": "boolean",
            "example": true
          }
        }
      },
      "NoAuthResponse": {
        "type": "object",
        "properties": {
          "code": {
            "type": "string",
            "example": "PUD-001"
          },
          "message": {
            "type": "string",
            "example": "No user authenticated"
          }
        }
      },
      "ErrorResponse": {
        "type": "object",
        "properties": {
          "code": {
            "type": "string",
            "example": "PUD-XXX"
          },
          "message": {
            "type": "string",
            "example": "Error message"
          }
        }
      }
    },
    "securitySchemes": {
      "cookieAuth": {
        "type": "apiKey",
        "in": "cookie",
        "name": "puddingdebt.sid"
      },
      "apiKeyAuth": {
        "type": "apiKey",
        "in": "header",
        "name": "Authorization"
      }
    }
  }
}